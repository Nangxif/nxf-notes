import{_ as n,c as s,o as a,h as e}from"./app.aa0f4fc7.js";const C=JSON.parse('{"title":"\u6587\u672C\u548C\u65E0\u7528\u6807\u7B7E(Fragment)\u7684diff\u7B97\u6CD5","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u4E00\u3001\u6587\u672C\u7C7B\u578B\u7684diff-processText","slug":"\u4E00\u3001\u6587\u672C\u7C7B\u578B\u7684diff-processtext","link":"#\u4E00\u3001\u6587\u672C\u7C7B\u578B\u7684diff-processtext","children":[]},{"level":2,"title":"\u4E8C\u3001\u65E0\u7528\u6807\u7B7E(Fragment)\u7684diff-processFragment","slug":"\u4E8C\u3001\u65E0\u7528\u6807\u7B7E-fragment-\u7684diff-processfragment","link":"#\u4E8C\u3001\u65E0\u7528\u6807\u7B7E-fragment-\u7684diff-processfragment","children":[{"level":3,"title":"1.mountChildren","slug":"_1-mountchildren","link":"#_1-mountchildren","children":[]},{"level":3,"title":"2.patchChildren","slug":"_2-patchchildren","link":"#_2-patchchildren","children":[]}]}],"relativePath":"blogs/front-frame/vue3/sound-code/runtime-core/text-fragment-diff.md","lastUpdated":1677078212000}'),l={name:"blogs/front-frame/vue3/sound-code/runtime-core/text-fragment-diff.md"},p=e(`<h1 id="\u6587\u672C\u548C\u65E0\u7528\u6807\u7B7E-fragment-\u7684diff\u7B97\u6CD5" tabindex="-1">\u6587\u672C\u548C\u65E0\u7528\u6807\u7B7E(Fragment)\u7684diff\u7B97\u6CD5 <a class="header-anchor" href="#\u6587\u672C\u548C\u65E0\u7528\u6807\u7B7E-fragment-\u7684diff\u7B97\u6CD5" aria-hidden="true">#</a></h1><p>\u4E0A\u4E00\u8282\u3010createRenderer\u521B\u5EFA\u6E32\u67D3\u5668\u3011\u7684\u672B\u5C3E\u6211\u4EEC\u63D0\u4F9B\u4E86patch\u7684\u6E90\u7801\u3002\u8FD9\u6BB5\u6E90\u7801\u4E2D\u3002\u4F1A\u9996\u5148\u901A\u8FC7switch\u5C06\u65B0\u865A\u62DF\u8282\u70B9\u662F\u6587\u672C\u7C7B\u578B\u7684\u548C\u65E0\u7528\u6807\u7B7E\u7684\u90FD\u5355\u72EC\u62BD\u79BB\u51FA\u6765\u5904\u7406\u3002</p><h2 id="\u4E00\u3001\u6587\u672C\u7C7B\u578B\u7684diff-processtext" tabindex="-1">\u4E00\u3001\u6587\u672C\u7C7B\u578B\u7684diff-processText <a class="header-anchor" href="#\u4E00\u3001\u6587\u672C\u7C7B\u578B\u7684diff-processtext" aria-hidden="true">#</a></h2><p>\u5982\u679C\u65B0\u7684\u865A\u62DF\u8282\u70B9\u662F\u6587\u672C\u7C7B\u578B\u3002\u90A3\u4E48\u53EF\u80FD\u4F1A\u51FA\u73B0\u4E24\u79CD\u60C5\u51B5</p><ol><li>\u65E7\u7684\u865A\u62DF\u8282\u70B9\u4E0D\u5B58\u5728-\u90A3\u4E48\u610F\u5473\u7740\u8981\u521B\u5EFA</li><li>\u65E7\u7684\u865A\u62DF\u8282\u70B9\u5B58\u5728\uFF0C\u5E76\u4E14\u65B0\u7684\u865A\u62DF\u8282\u70B9\u7684\u5B50\u8282\u70B9\uFF08\u4E5F\u5C31\u662F\u6587\u672C\uFF09\u4E0E\u65E7\u7684\u865A\u62DF\u8282\u70B9\u7684\u5B50\u8282\u70B9\u4E0D\u4E00\u6837\uFF08\u4E5F\u5C31\u662F\u6587\u672C\u5185\u5BB9\u4E0D\u4E00\u6837\uFF09-\u90A3\u4E48\u610F\u5473\u7740\u8981\u66F4\u65B0</li></ol><p>\u5982\u679C\u4EE3\u7801\u6267\u884C\u5230processText\u51FD\u6570\u4E86\uFF0C\u90A3\u4E48\u65B0\u7684\u865A\u62DF\u8282\u70B9\u4E00\u5B9A\u662F\u5B58\u5728\u7684\uFF0C\u56E0\u4E3A\u5728render\u51FD\u6570\u91CC\u9762\uFF0C\u65B0\u7684\u865A\u62DF\u8282\u70B9\u5982\u679C\u4E3Anull\u7684\u8BDD\uFF0C\u6709\u53EF\u80FD\u4F1A\u8FDB\u884C\u5378\u8F7D\u64CD\u4F5C\uFF0C\u5426\u5219\u624D\u4F1A\u8D70\u5230patch\u903B\u8F91\uFF0C\u8FDB\u800C\u6267\u884CprocessText\u6D41\u7A0B\u3002</p><div class="language- line-numbers-mode"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">const processText = (n1, n2, container) =&gt; {</span></span>
<span class="line"><span style="color:#A6ACCD;">    if (n1 === null) {</span></span>
<span class="line"><span style="color:#A6ACCD;">      // \u521B\u5EFA</span></span>
<span class="line"><span style="color:#A6ACCD;">      /**</span></span>
<span class="line"><span style="color:#A6ACCD;">       * n2</span></span>
<span class="line"><span style="color:#A6ACCD;">       * {type: Symbol(Text), props: null, children: &#39;123&#39;, el: null, key: undefined,\xA0\u2026}children: &quot;123&quot;el: textkey: undefinedprops: nullshapeFlag: 8type: Symbol(Text)__v_isVnode: true[[Prototype]]: Object</span></span>
<span class="line"><span style="color:#A6ACCD;">       * n2.children</span></span>
<span class="line"><span style="color:#A6ACCD;">       * &#39;123&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">       * */</span></span>
<span class="line"><span style="color:#A6ACCD;">      hostInsert((n2.el = hostCreateText(n2.children)), container);</span></span>
<span class="line"><span style="color:#A6ACCD;">    } else {</span></span>
<span class="line"><span style="color:#A6ACCD;">      // \u6587\u672C\u66F4\u65B0\u6D41\u7A0B</span></span>
<span class="line"><span style="color:#A6ACCD;">      // \u6587\u672C\u7684\u5185\u5BB9\u53D8\u5316\u4E86\uFF0C\u6211\u53EF\u4EE5\u590D\u7528\u8001\u7684\u8282\u70B9</span></span>
<span class="line"><span style="color:#A6ACCD;">      const el = (n2.el = n1.el); // \u8FD9\u91CC\u7ED9\u65B0\u7684\u865A\u62DF\u8282\u70B9\u7684el\u5C5E\u6027\u8D4B\u503C\u4E0A\u771F\u5B9E\u7684dom\u8282\u70B9</span></span>
<span class="line"><span style="color:#A6ACCD;">      if (n1.children !== n2.children) {</span></span>
<span class="line"><span style="color:#A6ACCD;">        hostSetText(el, n2.children);</span></span>
<span class="line"><span style="color:#A6ACCD;">      }</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;">};</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h2 id="\u4E8C\u3001\u65E0\u7528\u6807\u7B7E-fragment-\u7684diff-processfragment" tabindex="-1">\u4E8C\u3001\u65E0\u7528\u6807\u7B7E(Fragment)\u7684diff-processFragment <a class="header-anchor" href="#\u4E8C\u3001\u65E0\u7528\u6807\u7B7E-fragment-\u7684diff-processfragment" aria-hidden="true">#</a></h2><p>\u5728\u8FD9\u4E4B\u524D\u6211\u4EEC\u5F97\u5148\u4E86\u89E3Fragment\u6807\u7B7E\u662F\u5E72\u561B\u7528\u7684\u3002</p><p>Fragment\u6807\u7B7E\u662F\u7528\u6765\u5305\u88F9\u4E00\u5806\u5176\u4ED6\u7684\u8282\u70B9\u7684\uFF0C\u5728\u6E32\u67D3\u7684\u65F6\u5019Fragment\u6807\u7B7E\u5728\u771F\u5B9E\u8282\u70B9\u4E0A\u5E76\u4E0D\u4F1A\u6709\u4F53\u73B0\u3002</p><p>\u56E0\u6B64\u3002Fragment\u7684diff\u7B97\u6CD5\uFF0C\u5C31\u662F\u5BF9\u6BCF\u4E2A\u5B50\u8282\u70B9\u9010\u4E00\u6267\u884Cpatch\u6D41\u7A0B\u3002</p><div class="language- line-numbers-mode"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">const processFragment = (n1, n2, container) =&gt; {</span></span>
<span class="line"><span style="color:#A6ACCD;">	// \u5982\u679C\u65E7\u7684\u865A\u62DF\u8282\u70B9\u4E0D\u5B58\u5728\uFF0C\u90A3\u4E48\u5C31\u9700\u8981\u5FAA\u73AF\u904D\u5386n2\u7684\u5B50\u8282\u70B9\u5E76\u4E14\u9010\u4E00\u6302\u8F7D</span></span>
<span class="line"><span style="color:#A6ACCD;">    if (n1 == null) {</span></span>
<span class="line"><span style="color:#A6ACCD;">      mountChildren(n2.children, container);</span></span>
<span class="line"><span style="color:#A6ACCD;">    } else {</span></span>
<span class="line"><span style="color:#A6ACCD;">    // \u5982\u679C\u65E7\u7684\u865A\u62DF\u8282\u70B9\u5B58\u5728\uFF0C\u90A3\u4E48\u5C31\u9700\u8981\u5FAA\u73AF\u904D\u5386\u6BD4\u8F83n1\u7684\u5B50\u8282\u70B9\u548Cn2\u7684\u5B50\u8282\u70B9</span></span>
<span class="line"><span style="color:#A6ACCD;">      patchChildren(n1, n2, container);</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;">};</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="_1-mountchildren" tabindex="-1">1.mountChildren <a class="header-anchor" href="#_1-mountchildren" aria-hidden="true">#</a></h3><div class="language- line-numbers-mode"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">const mountChildren = (children, container) =&gt; {</span></span>
<span class="line"><span style="color:#A6ACCD;">    for (let i = 0; i &lt; children.length; i++) {</span></span>
<span class="line"><span style="color:#A6ACCD;">      // \u5904\u7406\u540E\u8981\u8FDB\u884C\u66FF\u6362\uFF0C\u5426\u5219children\u4E2D\u5B58\u653E\u7684\u4F9D\u65E7\u662F\u5B57\u7B26\u4E32</span></span>
<span class="line"><span style="color:#A6ACCD;">      let child = normalize(children, i);</span></span>
<span class="line"><span style="color:#A6ACCD;">      patch(null, child, container);</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;">};</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u56E0\u4E3AFragment\u7684\u5B50\u8282\u70B9\u91CC\u9762\u53EF\u80FD\u4F1A\u6709\u6587\u672C\uFF0C\u53EF\u80FD\u4F1A\u6709\u6570\u5B57</p><div class="language- line-numbers-mode"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">&lt;Fragment&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">	123</span></span>
<span class="line"><span style="color:#A6ACCD;">	&lt;div&gt;\u6587\u672C1&lt;/div&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">	\u6587\u672C2</span></span>
<span class="line"><span style="color:#A6ACCD;">&lt;/Fragment&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u5982\u679C\u51FA\u73B0\u50CF\u4E0A\u9762123\u8FD9\u79CD\u6570\u5B57\u7C7B\u578B\u7684\u5B50\u8282\u70B9\uFF0C\u6216\u8005\u50CF\u201C\u6587\u672C2\u201D\u8FD9\u79CD\u7C7B\u578B\u7684\u5B50\u8282\u70B9\uFF0C\u6211\u4EEC\u9700\u8981\u628A\u5B83\u8F6C\u6210<code>Text</code>\u6587\u672C\u865A\u62DF\u8282\u70B9\u3002\u4E0B\u9762<code>normalize</code>\u51FD\u6570\u7684\u529F\u80FD\u5C31\u662F\u5C06\u6570\u5B57\u548C\u6587\u672C\u5168\u90E8\u8F6C\u6362\u4E3A<code>Text</code>\u865A\u62DF\u8282\u70B9\u3002</p><div class="language- line-numbers-mode"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">const normalize = (children, i) =&gt; {</span></span>
<span class="line"><span style="color:#A6ACCD;">    if (isString(children[i]) || isNumber(children[i])) {</span></span>
<span class="line"><span style="color:#A6ACCD;">      let vnode = createVnode(Text, null, children[i]);</span></span>
<span class="line"><span style="color:#A6ACCD;">      children[i] = vnode;</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;">    return children[i];</span></span>
<span class="line"><span style="color:#A6ACCD;">};</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="_2-patchchildren" tabindex="-1">2.patchChildren <a class="header-anchor" href="#_2-patchchildren" aria-hidden="true">#</a></h3><p>patchChildren\u5C31\u662F\u9762\u8BD5\u7ECF\u5E38\u4F1A\u95EE\u5230\u7684diff\u7B97\u6CD5\u7684\u6838\u5FC3\u90E8\u5206\uFF0C\u7531\u4E8E\u8FD9\u90E8\u5206\u5185\u5BB9\u4E0E\u4E0B\u4E2A\u7AE0\u8282\u5185\u5BB9\u91CD\u5408\uFF0C\u56E0\u6B64\u8FD9\u90E8\u5206\u6211\u4EEC\u5728\u4E0B\u8282\u3010\u5143\u7D20\u8282\u70B9\u7EC4\u4EF6\u7684diff\u7B97\u6CD5\u3011\u8BB2\u89E3\u3002</p>`,20),r=[p];function c(i,t,o,d,b,m){return a(),s("div",null,r)}const A=n(l,[["render",c]]);export{C as __pageData,A as default};
